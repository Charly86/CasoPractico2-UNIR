---
# tasks file for kubemaster

- name: Configuring firewall rules to master
  shell: |
    firewall-cmd --permanent --add-port=6443/tcp
    firewall-cmd --permanent --add-port=2379-2380/tcp
    firewall-cmd --permanent --add-port=10250/tcp
    firewall-cmd --permanent --add-port=10251/tcp
    firewall-cmd --permanent --add-port=10252/tcp
    firewall-cmd --permanent --add-port=10255/tcp

- name: Allow access from the workers nodes
  firewalld:
    rich_rule: "rule family=ipv4 source address={{ hostvars[item].ansible_host }}/32 accept"
    permanent: true
    state: enabled
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups.workers }}"
  

- name: Get Docker IP
  shell: ip a | grep eth0 | grep inet | awk '{print $2}'
  register: dockerIp

- name: Allow containers to access localhost
  firewalld:
    rich_rule: "rule family=ipv4 source address={{dockerIp.stdout}} accept"
    permanent: true
    state: enabled
    zone: public

- name: Restart Firewalld service
  systemd:
    name: firewalld
    state: restarted
    
- name: "Install CNI plugin (Container Network Interface) and define PODs network"
  command: "kubeadm init --pod-network-cidr={{cidrPodNetwork}} --ignore-preflight-errors=all"
  ignore_errors: True

- name: "Configuration Files Setup"
  file:
    path: "$HOME/.kube"
    state: directory
    
- name: "Copying Configuration File"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes

- name: Change kubeconfig file permission
  file:
    path: $HOME/.kube/config 
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"

- name: Allow user to execute kube commands without sudo
  become: no
  command: "{{ item }}"
  with_items:
    - mkdir -p /home/$USER/.kube
    - sudo cp -i /etc/kubernetes/admin.conf /home/$USER/.kube/config
    - sudo chown $USER:$USER /home/$USER/.kube/config

- name: install Flannel Pod network
  command: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

- name: install ingress controller
  command: "kubectl apply -f https://raw.githubusercontent.com/haproxytech/kubernetes-ingress/master/deploy/haproxy-ingress.yaml"

- name: "Create Join Token"
  command: "kubeadm token create --print-join-command"
  register: join_token
  ignore_errors: True
- debug:
        msg: "{{join_token.stdout}}"
        
- name: Copy join command to local file.
  local_action: copy content="{{ join_token.stdout_lines[0] }}" dest="/tmp/join_token" mode=0777
