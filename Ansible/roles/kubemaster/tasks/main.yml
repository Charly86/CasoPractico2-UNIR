- name: "Installing Required Packages"
  package:
      name:
      - iproute-tc
      state: present

- name: "Configuramos el repositorio de kubernetes"
  yum_repository:
      name: kubernetes
      description: "Kubernetes"
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgcheck: yes
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude: kubelet kubeadm kubectl

- name: "Instalamos kubernetes"
  yum:
      name: [ 'kubectl', 'kubeadm', 'kubelet' ]
      state: present
      disable_excludes: kubernetes

- name: AÃ±adimos repositorio de Docker para centos
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo
  become: yes
      

- name: Install Docker
  package:
      name: docker-ce
      state: latest
  become: yes
  
- name: update kernel settings
  sysctl:
   name: net.bridge.bridge-nf-call-iptables
   value: 1
   sysctl_set: yes
   state: present
   reload: yes 

- name: Start Docker service
  service:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: "Starting Kubelet Service"
  service:
      name: "kubelet"
      state: started
      enabled: yes
      
- name: Confuring the docker daemon.json file
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
      "exec-opts": ["native.cgroupdriver=systemd"]
      }
    
- name: "Pulling the config images"
  shell: kubeadm config images pull
 
- name: "Restarting the docker service"
  service:
     name: docker
     state: restarted

- name: "Configuring the Ip tables and refreshing sysctl"
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      
- name: "systemctl"
  shell: "sysctl --system"
  
- name: "Initializing the Kubernetes cluster on Master Node"
  command: "kubeadm init --ignore-preflight-errors=all"
  ignore_errors: True

- name: "Configuration Files Setup"
  file:
    path: "$HOME/.kube"
    state: directory
    
- name: "Copying Configuration File"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes

- name: Change kubeconfig file permission
  file:
    path: $HOME/.kube/config 
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"

- name: "Downloading CNI Plugin"
  command: "kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  ignore_errors: True

- name: Install Ingress Controller
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/haproxytech/kubernetes-ingress/v1.5/deploy/haproxy-ingress.yaml
    
- name: Install Tigera
  shell: kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
  register: kubectl_operator
  become: yes
  
- name: "Create Join Token"
  command: "kubeadm token create --print-join-command"
  register: join_token
  ignore_errors: True
- debug:
        msg: "{{join_token.stdout}}"
        
- name: Copy join command to local file.
  become: yes
  local_action: copy content="{{ join_token.stdout_lines[0] }}" dest="/tmp/join_token" mode=0777
